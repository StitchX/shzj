<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
<!--&lt;!&ndash;    默认配置方式-->
<!--下面这个配置方式一般不用，没法扩展-->
<!--        此配置作用下，SpringMVC的配置文件默认位于WEB-INF下，默认名称为<servlet-name>servlet.xml，例如，以-->
<!--        下置所对应SpringMVC的配置文件位于WEB-INF下，-->
<!--        文件名为springMVC-servlet.xml&ndash;&gt;-->
<!--&lt;!&ndash;    配置springMVC的前端控制器，对浏览器发送的请求进行统一处理&ndash;&gt;-->
<!--    <servlet>-->
<!--        <servlet-name>SrpingMVC</servlet-name>-->
<!--        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>-->
<!--    </servlet>-->
<!--    <servlet-mapping>-->
<!--        <servlet-name>SrpingMVC</servlet-name>-->
<!--&lt;!&ndash;        设置springMVC的核心控制器所能处理的请求的请求路径/所匹配的请求可以是/1ogin或.htm1或.js或.css方式的请求路径-->
<!--            但是/不能匹配.jsp请求路径的请求-->
<!--            因为JSP文件需要特定的servlet进行匹配，springMVC会把该文件当做普通的servlet进行处理&ndash;&gt;-->
<!--        <url-pattern>/</url-pattern>-->
<!--    </servlet-mapping>-->

<!--    扩展配置方式
        制器DispatcherServlet的初始化时间可通过init-param标签设置SpringMVC配置文件的位置和名称，
        通过load-on-startup标签设置SpringMVC前端控-->
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--        配置springMVC配置文件的位置和名称-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springMVC.xml</param-value>
        </init-param>
        <!-- 作为框架的核心组件，在启动过程中有大量的初始化操作要做，这些操作放在第一次请求时才执行非常不恰当 -->
        <!-- 我们应该将DispatcherServlet设置为随Web应用(服务器)一起启动 -->
        <load-on-startup>1</load-on-startup>

    </servlet>

    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <!-- 对DispatcherServlet来说，url-pattern有两种方式配置 -->
        <!-- 方式一：配置“/”，表示匹配整个Web应用范围内所有请求。这里有一个硬性规定：不能写成“/*”。只有这一个地方有这个特殊要求，以后我们再配置Filter还是可以正常写“/*”。 -->
        <!-- 方式二：配置“*.扩展名”，表示匹配整个Web应用范围内部分请求 -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>